
09_ADC1_ADC2_ADC3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c3c  080001c8  080001c8  000011c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000e04  08000e0c  00001e0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000e04  08000e04  00001e0c  2**0
                  CONTENTS
  4 .ARM          00000000  08000e04  08000e04  00001e0c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e04  08000e0c  00001e0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e04  08000e04  00001e04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000e08  08000e08  00001e08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001e0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000040  20000000  08000e0c  00002000  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000040  08000e0c  00002040  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001e0c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000054e  00000000  00000000  00001e3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000198  00000000  00000000  0000238a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000098  00000000  00000000  00002528  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000006b  00000000  00000000  000025c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000189a6  00000000  00000000  0000262b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000804  00000000  00000000  0001afd1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008aa74  00000000  00000000  0001b7d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a6249  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000029c  00000000  00000000  000a628c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006b  00000000  00000000  000a6528  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	@ (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	@ (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000000 	.word	0x20000000
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08000dec 	.word	0x08000dec

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	@ (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	@ (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	@ (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000004 	.word	0x20000004
 8000204:	08000dec 	.word	0x08000dec

08000208 <__aeabi_drsub>:
 8000208:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 800020c:	e002      	b.n	8000214 <__adddf3>
 800020e:	bf00      	nop

08000210 <__aeabi_dsub>:
 8000210:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000214 <__adddf3>:
 8000214:	b530      	push	{r4, r5, lr}
 8000216:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800021a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800021e:	ea94 0f05 	teq	r4, r5
 8000222:	bf08      	it	eq
 8000224:	ea90 0f02 	teqeq	r0, r2
 8000228:	bf1f      	itttt	ne
 800022a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800022e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000232:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000236:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800023a:	f000 80e2 	beq.w	8000402 <__adddf3+0x1ee>
 800023e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000242:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000246:	bfb8      	it	lt
 8000248:	426d      	neglt	r5, r5
 800024a:	dd0c      	ble.n	8000266 <__adddf3+0x52>
 800024c:	442c      	add	r4, r5
 800024e:	ea80 0202 	eor.w	r2, r0, r2
 8000252:	ea81 0303 	eor.w	r3, r1, r3
 8000256:	ea82 0000 	eor.w	r0, r2, r0
 800025a:	ea83 0101 	eor.w	r1, r3, r1
 800025e:	ea80 0202 	eor.w	r2, r0, r2
 8000262:	ea81 0303 	eor.w	r3, r1, r3
 8000266:	2d36      	cmp	r5, #54	@ 0x36
 8000268:	bf88      	it	hi
 800026a:	bd30      	pophi	{r4, r5, pc}
 800026c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000270:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000274:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000278:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800027c:	d002      	beq.n	8000284 <__adddf3+0x70>
 800027e:	4240      	negs	r0, r0
 8000280:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000284:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000288:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800028c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000290:	d002      	beq.n	8000298 <__adddf3+0x84>
 8000292:	4252      	negs	r2, r2
 8000294:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000298:	ea94 0f05 	teq	r4, r5
 800029c:	f000 80a7 	beq.w	80003ee <__adddf3+0x1da>
 80002a0:	f1a4 0401 	sub.w	r4, r4, #1
 80002a4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002a8:	db0d      	blt.n	80002c6 <__adddf3+0xb2>
 80002aa:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ae:	fa22 f205 	lsr.w	r2, r2, r5
 80002b2:	1880      	adds	r0, r0, r2
 80002b4:	f141 0100 	adc.w	r1, r1, #0
 80002b8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002bc:	1880      	adds	r0, r0, r2
 80002be:	fa43 f305 	asr.w	r3, r3, r5
 80002c2:	4159      	adcs	r1, r3
 80002c4:	e00e      	b.n	80002e4 <__adddf3+0xd0>
 80002c6:	f1a5 0520 	sub.w	r5, r5, #32
 80002ca:	f10e 0e20 	add.w	lr, lr, #32
 80002ce:	2a01      	cmp	r2, #1
 80002d0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002d4:	bf28      	it	cs
 80002d6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002da:	fa43 f305 	asr.w	r3, r3, r5
 80002de:	18c0      	adds	r0, r0, r3
 80002e0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002e4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80002e8:	d507      	bpl.n	80002fa <__adddf3+0xe6>
 80002ea:	f04f 0e00 	mov.w	lr, #0
 80002ee:	f1dc 0c00 	rsbs	ip, ip, #0
 80002f2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002f6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002fa:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80002fe:	d31b      	bcc.n	8000338 <__adddf3+0x124>
 8000300:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000304:	d30c      	bcc.n	8000320 <__adddf3+0x10c>
 8000306:	0849      	lsrs	r1, r1, #1
 8000308:	ea5f 0030 	movs.w	r0, r0, rrx
 800030c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000310:	f104 0401 	add.w	r4, r4, #1
 8000314:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000318:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 800031c:	f080 809a 	bcs.w	8000454 <__adddf3+0x240>
 8000320:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000324:	bf08      	it	eq
 8000326:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800032a:	f150 0000 	adcs.w	r0, r0, #0
 800032e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000332:	ea41 0105 	orr.w	r1, r1, r5
 8000336:	bd30      	pop	{r4, r5, pc}
 8000338:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800033c:	4140      	adcs	r0, r0
 800033e:	eb41 0101 	adc.w	r1, r1, r1
 8000342:	3c01      	subs	r4, #1
 8000344:	bf28      	it	cs
 8000346:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800034a:	d2e9      	bcs.n	8000320 <__adddf3+0x10c>
 800034c:	f091 0f00 	teq	r1, #0
 8000350:	bf04      	itt	eq
 8000352:	4601      	moveq	r1, r0
 8000354:	2000      	moveq	r0, #0
 8000356:	fab1 f381 	clz	r3, r1
 800035a:	bf08      	it	eq
 800035c:	3320      	addeq	r3, #32
 800035e:	f1a3 030b 	sub.w	r3, r3, #11
 8000362:	f1b3 0220 	subs.w	r2, r3, #32
 8000366:	da0c      	bge.n	8000382 <__adddf3+0x16e>
 8000368:	320c      	adds	r2, #12
 800036a:	dd08      	ble.n	800037e <__adddf3+0x16a>
 800036c:	f102 0c14 	add.w	ip, r2, #20
 8000370:	f1c2 020c 	rsb	r2, r2, #12
 8000374:	fa01 f00c 	lsl.w	r0, r1, ip
 8000378:	fa21 f102 	lsr.w	r1, r1, r2
 800037c:	e00c      	b.n	8000398 <__adddf3+0x184>
 800037e:	f102 0214 	add.w	r2, r2, #20
 8000382:	bfd8      	it	le
 8000384:	f1c2 0c20 	rsble	ip, r2, #32
 8000388:	fa01 f102 	lsl.w	r1, r1, r2
 800038c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000390:	bfdc      	itt	le
 8000392:	ea41 010c 	orrle.w	r1, r1, ip
 8000396:	4090      	lslle	r0, r2
 8000398:	1ae4      	subs	r4, r4, r3
 800039a:	bfa2      	ittt	ge
 800039c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003a0:	4329      	orrge	r1, r5
 80003a2:	bd30      	popge	{r4, r5, pc}
 80003a4:	ea6f 0404 	mvn.w	r4, r4
 80003a8:	3c1f      	subs	r4, #31
 80003aa:	da1c      	bge.n	80003e6 <__adddf3+0x1d2>
 80003ac:	340c      	adds	r4, #12
 80003ae:	dc0e      	bgt.n	80003ce <__adddf3+0x1ba>
 80003b0:	f104 0414 	add.w	r4, r4, #20
 80003b4:	f1c4 0220 	rsb	r2, r4, #32
 80003b8:	fa20 f004 	lsr.w	r0, r0, r4
 80003bc:	fa01 f302 	lsl.w	r3, r1, r2
 80003c0:	ea40 0003 	orr.w	r0, r0, r3
 80003c4:	fa21 f304 	lsr.w	r3, r1, r4
 80003c8:	ea45 0103 	orr.w	r1, r5, r3
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	f1c4 040c 	rsb	r4, r4, #12
 80003d2:	f1c4 0220 	rsb	r2, r4, #32
 80003d6:	fa20 f002 	lsr.w	r0, r0, r2
 80003da:	fa01 f304 	lsl.w	r3, r1, r4
 80003de:	ea40 0003 	orr.w	r0, r0, r3
 80003e2:	4629      	mov	r1, r5
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ea:	4629      	mov	r1, r5
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	f094 0f00 	teq	r4, #0
 80003f2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80003f6:	bf06      	itte	eq
 80003f8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80003fc:	3401      	addeq	r4, #1
 80003fe:	3d01      	subne	r5, #1
 8000400:	e74e      	b.n	80002a0 <__adddf3+0x8c>
 8000402:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000406:	bf18      	it	ne
 8000408:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800040c:	d029      	beq.n	8000462 <__adddf3+0x24e>
 800040e:	ea94 0f05 	teq	r4, r5
 8000412:	bf08      	it	eq
 8000414:	ea90 0f02 	teqeq	r0, r2
 8000418:	d005      	beq.n	8000426 <__adddf3+0x212>
 800041a:	ea54 0c00 	orrs.w	ip, r4, r0
 800041e:	bf04      	itt	eq
 8000420:	4619      	moveq	r1, r3
 8000422:	4610      	moveq	r0, r2
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	ea91 0f03 	teq	r1, r3
 800042a:	bf1e      	ittt	ne
 800042c:	2100      	movne	r1, #0
 800042e:	2000      	movne	r0, #0
 8000430:	bd30      	popne	{r4, r5, pc}
 8000432:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000436:	d105      	bne.n	8000444 <__adddf3+0x230>
 8000438:	0040      	lsls	r0, r0, #1
 800043a:	4149      	adcs	r1, r1
 800043c:	bf28      	it	cs
 800043e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000442:	bd30      	pop	{r4, r5, pc}
 8000444:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000448:	bf3c      	itt	cc
 800044a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800044e:	bd30      	popcc	{r4, r5, pc}
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000454:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000458:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800045c:	f04f 0000 	mov.w	r0, #0
 8000460:	bd30      	pop	{r4, r5, pc}
 8000462:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000466:	bf1a      	itte	ne
 8000468:	4619      	movne	r1, r3
 800046a:	4610      	movne	r0, r2
 800046c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000470:	bf1c      	itt	ne
 8000472:	460b      	movne	r3, r1
 8000474:	4602      	movne	r2, r0
 8000476:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800047a:	bf06      	itte	eq
 800047c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000480:	ea91 0f03 	teqeq	r1, r3
 8000484:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	bf00      	nop

0800048c <__aeabi_ui2d>:
 800048c:	f090 0f00 	teq	r0, #0
 8000490:	bf04      	itt	eq
 8000492:	2100      	moveq	r1, #0
 8000494:	4770      	bxeq	lr
 8000496:	b530      	push	{r4, r5, lr}
 8000498:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800049c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004a0:	f04f 0500 	mov.w	r5, #0
 80004a4:	f04f 0100 	mov.w	r1, #0
 80004a8:	e750      	b.n	800034c <__adddf3+0x138>
 80004aa:	bf00      	nop

080004ac <__aeabi_i2d>:
 80004ac:	f090 0f00 	teq	r0, #0
 80004b0:	bf04      	itt	eq
 80004b2:	2100      	moveq	r1, #0
 80004b4:	4770      	bxeq	lr
 80004b6:	b530      	push	{r4, r5, lr}
 80004b8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004bc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004c0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80004c4:	bf48      	it	mi
 80004c6:	4240      	negmi	r0, r0
 80004c8:	f04f 0100 	mov.w	r1, #0
 80004cc:	e73e      	b.n	800034c <__adddf3+0x138>
 80004ce:	bf00      	nop

080004d0 <__aeabi_f2d>:
 80004d0:	0042      	lsls	r2, r0, #1
 80004d2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004d6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004da:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004de:	bf1f      	itttt	ne
 80004e0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80004e4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80004e8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80004ec:	4770      	bxne	lr
 80004ee:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80004f2:	bf08      	it	eq
 80004f4:	4770      	bxeq	lr
 80004f6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80004fa:	bf04      	itt	eq
 80004fc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000500:	4770      	bxeq	lr
 8000502:	b530      	push	{r4, r5, lr}
 8000504:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000510:	e71c      	b.n	800034c <__adddf3+0x138>
 8000512:	bf00      	nop

08000514 <__aeabi_ul2d>:
 8000514:	ea50 0201 	orrs.w	r2, r0, r1
 8000518:	bf08      	it	eq
 800051a:	4770      	bxeq	lr
 800051c:	b530      	push	{r4, r5, lr}
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	e00a      	b.n	800053a <__aeabi_l2d+0x16>

08000524 <__aeabi_l2d>:
 8000524:	ea50 0201 	orrs.w	r2, r0, r1
 8000528:	bf08      	it	eq
 800052a:	4770      	bxeq	lr
 800052c:	b530      	push	{r4, r5, lr}
 800052e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000532:	d502      	bpl.n	800053a <__aeabi_l2d+0x16>
 8000534:	4240      	negs	r0, r0
 8000536:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800053a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800053e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000542:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000546:	f43f aed8 	beq.w	80002fa <__adddf3+0xe6>
 800054a:	f04f 0203 	mov.w	r2, #3
 800054e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000552:	bf18      	it	ne
 8000554:	3203      	addne	r2, #3
 8000556:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800055a:	bf18      	it	ne
 800055c:	3203      	addne	r2, #3
 800055e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000562:	f1c2 0320 	rsb	r3, r2, #32
 8000566:	fa00 fc03 	lsl.w	ip, r0, r3
 800056a:	fa20 f002 	lsr.w	r0, r0, r2
 800056e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000572:	ea40 000e 	orr.w	r0, r0, lr
 8000576:	fa21 f102 	lsr.w	r1, r1, r2
 800057a:	4414      	add	r4, r2
 800057c:	e6bd      	b.n	80002fa <__adddf3+0xe6>
 800057e:	bf00      	nop

08000580 <__aeabi_dmul>:
 8000580:	b570      	push	{r4, r5, r6, lr}
 8000582:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000586:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800058a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800058e:	bf1d      	ittte	ne
 8000590:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000594:	ea94 0f0c 	teqne	r4, ip
 8000598:	ea95 0f0c 	teqne	r5, ip
 800059c:	f000 f8de 	bleq	800075c <__aeabi_dmul+0x1dc>
 80005a0:	442c      	add	r4, r5
 80005a2:	ea81 0603 	eor.w	r6, r1, r3
 80005a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005b2:	bf18      	it	ne
 80005b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005bc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80005c0:	d038      	beq.n	8000634 <__aeabi_dmul+0xb4>
 80005c2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ce:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005d2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005d6:	f04f 0600 	mov.w	r6, #0
 80005da:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005de:	f09c 0f00 	teq	ip, #0
 80005e2:	bf18      	it	ne
 80005e4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005e8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80005ec:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80005f0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80005f4:	d204      	bcs.n	8000600 <__aeabi_dmul+0x80>
 80005f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005fa:	416d      	adcs	r5, r5
 80005fc:	eb46 0606 	adc.w	r6, r6, r6
 8000600:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000604:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000608:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800060c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000610:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000614:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000618:	bf88      	it	hi
 800061a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800061e:	d81e      	bhi.n	800065e <__aeabi_dmul+0xde>
 8000620:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000624:	bf08      	it	eq
 8000626:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800062a:	f150 0000 	adcs.w	r0, r0, #0
 800062e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000638:	ea46 0101 	orr.w	r1, r6, r1
 800063c:	ea40 0002 	orr.w	r0, r0, r2
 8000640:	ea81 0103 	eor.w	r1, r1, r3
 8000644:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000648:	bfc2      	ittt	gt
 800064a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800064e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000652:	bd70      	popgt	{r4, r5, r6, pc}
 8000654:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000658:	f04f 0e00 	mov.w	lr, #0
 800065c:	3c01      	subs	r4, #1
 800065e:	f300 80ab 	bgt.w	80007b8 <__aeabi_dmul+0x238>
 8000662:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000666:	bfde      	ittt	le
 8000668:	2000      	movle	r0, #0
 800066a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800066e:	bd70      	pople	{r4, r5, r6, pc}
 8000670:	f1c4 0400 	rsb	r4, r4, #0
 8000674:	3c20      	subs	r4, #32
 8000676:	da35      	bge.n	80006e4 <__aeabi_dmul+0x164>
 8000678:	340c      	adds	r4, #12
 800067a:	dc1b      	bgt.n	80006b4 <__aeabi_dmul+0x134>
 800067c:	f104 0414 	add.w	r4, r4, #20
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f305 	lsl.w	r3, r0, r5
 8000688:	fa20 f004 	lsr.w	r0, r0, r4
 800068c:	fa01 f205 	lsl.w	r2, r1, r5
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000698:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800069c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a0:	fa21 f604 	lsr.w	r6, r1, r4
 80006a4:	eb42 0106 	adc.w	r1, r2, r6
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 040c 	rsb	r4, r4, #12
 80006b8:	f1c4 0520 	rsb	r5, r4, #32
 80006bc:	fa00 f304 	lsl.w	r3, r0, r4
 80006c0:	fa20 f005 	lsr.w	r0, r0, r5
 80006c4:	fa01 f204 	lsl.w	r2, r1, r4
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d4:	f141 0100 	adc.w	r1, r1, #0
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 0520 	rsb	r5, r4, #32
 80006e8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ec:	ea4e 0e02 	orr.w	lr, lr, r2
 80006f0:	fa20 f304 	lsr.w	r3, r0, r4
 80006f4:	fa01 f205 	lsl.w	r2, r1, r5
 80006f8:	ea43 0302 	orr.w	r3, r3, r2
 80006fc:	fa21 f004 	lsr.w	r0, r1, r4
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000704:	fa21 f204 	lsr.w	r2, r1, r4
 8000708:	ea20 0002 	bic.w	r0, r0, r2
 800070c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000710:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000714:	bf08      	it	eq
 8000716:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f094 0f00 	teq	r4, #0
 8000720:	d10f      	bne.n	8000742 <__aeabi_dmul+0x1c2>
 8000722:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000726:	0040      	lsls	r0, r0, #1
 8000728:	eb41 0101 	adc.w	r1, r1, r1
 800072c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000730:	bf08      	it	eq
 8000732:	3c01      	subeq	r4, #1
 8000734:	d0f7      	beq.n	8000726 <__aeabi_dmul+0x1a6>
 8000736:	ea41 0106 	orr.w	r1, r1, r6
 800073a:	f095 0f00 	teq	r5, #0
 800073e:	bf18      	it	ne
 8000740:	4770      	bxne	lr
 8000742:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000746:	0052      	lsls	r2, r2, #1
 8000748:	eb43 0303 	adc.w	r3, r3, r3
 800074c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000750:	bf08      	it	eq
 8000752:	3d01      	subeq	r5, #1
 8000754:	d0f7      	beq.n	8000746 <__aeabi_dmul+0x1c6>
 8000756:	ea43 0306 	orr.w	r3, r3, r6
 800075a:	4770      	bx	lr
 800075c:	ea94 0f0c 	teq	r4, ip
 8000760:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000764:	bf18      	it	ne
 8000766:	ea95 0f0c 	teqne	r5, ip
 800076a:	d00c      	beq.n	8000786 <__aeabi_dmul+0x206>
 800076c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000770:	bf18      	it	ne
 8000772:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000776:	d1d1      	bne.n	800071c <__aeabi_dmul+0x19c>
 8000778:	ea81 0103 	eor.w	r1, r1, r3
 800077c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000780:	f04f 0000 	mov.w	r0, #0
 8000784:	bd70      	pop	{r4, r5, r6, pc}
 8000786:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800078a:	bf06      	itte	eq
 800078c:	4610      	moveq	r0, r2
 800078e:	4619      	moveq	r1, r3
 8000790:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000794:	d019      	beq.n	80007ca <__aeabi_dmul+0x24a>
 8000796:	ea94 0f0c 	teq	r4, ip
 800079a:	d102      	bne.n	80007a2 <__aeabi_dmul+0x222>
 800079c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007a0:	d113      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007a2:	ea95 0f0c 	teq	r5, ip
 80007a6:	d105      	bne.n	80007b4 <__aeabi_dmul+0x234>
 80007a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007ac:	bf1c      	itt	ne
 80007ae:	4610      	movne	r0, r2
 80007b0:	4619      	movne	r1, r3
 80007b2:	d10a      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007b4:	ea81 0103 	eor.w	r1, r1, r3
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80007c4:	f04f 0000 	mov.w	r0, #0
 80007c8:	bd70      	pop	{r4, r5, r6, pc}
 80007ca:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007ce:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007d2:	bd70      	pop	{r4, r5, r6, pc}

080007d4 <__aeabi_ddiv>:
 80007d4:	b570      	push	{r4, r5, r6, lr}
 80007d6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80007da:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80007de:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007e2:	bf1d      	ittte	ne
 80007e4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007e8:	ea94 0f0c 	teqne	r4, ip
 80007ec:	ea95 0f0c 	teqne	r5, ip
 80007f0:	f000 f8a7 	bleq	8000942 <__aeabi_ddiv+0x16e>
 80007f4:	eba4 0405 	sub.w	r4, r4, r5
 80007f8:	ea81 0e03 	eor.w	lr, r1, r3
 80007fc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000800:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000804:	f000 8088 	beq.w	8000918 <__aeabi_ddiv+0x144>
 8000808:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800080c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000810:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000814:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000818:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800081c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000820:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000824:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000828:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 800082c:	429d      	cmp	r5, r3
 800082e:	bf08      	it	eq
 8000830:	4296      	cmpeq	r6, r2
 8000832:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000836:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800083a:	d202      	bcs.n	8000842 <__aeabi_ddiv+0x6e>
 800083c:	085b      	lsrs	r3, r3, #1
 800083e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000842:	1ab6      	subs	r6, r6, r2
 8000844:	eb65 0503 	sbc.w	r5, r5, r3
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000852:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 000c 	orrcs.w	r0, r0, ip
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008b0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008b4:	d018      	beq.n	80008e8 <__aeabi_ddiv+0x114>
 80008b6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008be:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008c2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008c6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008ca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ce:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008d2:	d1c0      	bne.n	8000856 <__aeabi_ddiv+0x82>
 80008d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008d8:	d10b      	bne.n	80008f2 <__aeabi_ddiv+0x11e>
 80008da:	ea41 0100 	orr.w	r1, r1, r0
 80008de:	f04f 0000 	mov.w	r0, #0
 80008e2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80008e6:	e7b6      	b.n	8000856 <__aeabi_ddiv+0x82>
 80008e8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008ec:	bf04      	itt	eq
 80008ee:	4301      	orreq	r1, r0
 80008f0:	2000      	moveq	r0, #0
 80008f2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80008f6:	bf88      	it	hi
 80008f8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80008fc:	f63f aeaf 	bhi.w	800065e <__aeabi_dmul+0xde>
 8000900:	ebb5 0c03 	subs.w	ip, r5, r3
 8000904:	bf04      	itt	eq
 8000906:	ebb6 0c02 	subseq.w	ip, r6, r2
 800090a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800090e:	f150 0000 	adcs.w	r0, r0, #0
 8000912:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000916:	bd70      	pop	{r4, r5, r6, pc}
 8000918:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 800091c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000920:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000924:	bfc2      	ittt	gt
 8000926:	ebd4 050c 	rsbsgt	r5, r4, ip
 800092a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800092e:	bd70      	popgt	{r4, r5, r6, pc}
 8000930:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000934:	f04f 0e00 	mov.w	lr, #0
 8000938:	3c01      	subs	r4, #1
 800093a:	e690      	b.n	800065e <__aeabi_dmul+0xde>
 800093c:	ea45 0e06 	orr.w	lr, r5, r6
 8000940:	e68d      	b.n	800065e <__aeabi_dmul+0xde>
 8000942:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000946:	ea94 0f0c 	teq	r4, ip
 800094a:	bf08      	it	eq
 800094c:	ea95 0f0c 	teqeq	r5, ip
 8000950:	f43f af3b 	beq.w	80007ca <__aeabi_dmul+0x24a>
 8000954:	ea94 0f0c 	teq	r4, ip
 8000958:	d10a      	bne.n	8000970 <__aeabi_ddiv+0x19c>
 800095a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800095e:	f47f af34 	bne.w	80007ca <__aeabi_dmul+0x24a>
 8000962:	ea95 0f0c 	teq	r5, ip
 8000966:	f47f af25 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800096a:	4610      	mov	r0, r2
 800096c:	4619      	mov	r1, r3
 800096e:	e72c      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000970:	ea95 0f0c 	teq	r5, ip
 8000974:	d106      	bne.n	8000984 <__aeabi_ddiv+0x1b0>
 8000976:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800097a:	f43f aefd 	beq.w	8000778 <__aeabi_dmul+0x1f8>
 800097e:	4610      	mov	r0, r2
 8000980:	4619      	mov	r1, r3
 8000982:	e722      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000984:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800098e:	f47f aec5 	bne.w	800071c <__aeabi_dmul+0x19c>
 8000992:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000996:	f47f af0d 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800099a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800099e:	f47f aeeb 	bne.w	8000778 <__aeabi_dmul+0x1f8>
 80009a2:	e712      	b.n	80007ca <__aeabi_dmul+0x24a>
 80009a4:	0000      	movs	r0, r0
	...

080009a8 <main>:
int ADC1_data, ADC2_data, ADC3_data;

double Temp_LM35_1, Temp_LM35_2, Temp_LM35_3;

int main()
{
 80009a8:	b580      	push	{r7, lr}
 80009aa:	af00      	add	r7, sp, #0
	ADC1_init();
 80009ac:	f000 f894 	bl	8000ad8 <ADC1_init>
	ADC1_conversion();
 80009b0:	f000 f8d6 	bl	8000b60 <ADC1_conversion>
	ADC2_init();
 80009b4:	f000 f8fc 	bl	8000bb0 <ADC2_init>
	ADC2_conversion();
 80009b8:	f000 f93e 	bl	8000c38 <ADC2_conversion>
	ADC3_init();
 80009bc:	f000 f964 	bl	8000c88 <ADC3_init>
	ADC3_conversion();
 80009c0:	f000 f99e 	bl	8000d00 <ADC3_conversion>

	while(1)
	{

		ADC1_data=ADC1_read();
 80009c4:	f000 f8dc 	bl	8000b80 <ADC1_read>
 80009c8:	4603      	mov	r3, r0
 80009ca:	4a3b      	ldr	r2, [pc, #236]	@ (8000ab8 <main+0x110>)
 80009cc:	6013      	str	r3, [r2, #0]
		ADC2_data=ADC2_read();
 80009ce:	f000 f943 	bl	8000c58 <ADC2_read>
 80009d2:	4603      	mov	r3, r0
 80009d4:	4a39      	ldr	r2, [pc, #228]	@ (8000abc <main+0x114>)
 80009d6:	6013      	str	r3, [r2, #0]
		ADC3_data=ADC3_read();
 80009d8:	f000 f9a2 	bl	8000d20 <ADC3_read>
 80009dc:	4603      	mov	r3, r0
 80009de:	4a38      	ldr	r2, [pc, #224]	@ (8000ac0 <main+0x118>)
 80009e0:	6013      	str	r3, [r2, #0]
		Temp_LM35_1 = ((ADC1_data*(3.3/4095)*1000)/10);    //lm35
 80009e2:	4b35      	ldr	r3, [pc, #212]	@ (8000ab8 <main+0x110>)
 80009e4:	681b      	ldr	r3, [r3, #0]
 80009e6:	4618      	mov	r0, r3
 80009e8:	f7ff fd60 	bl	80004ac <__aeabi_i2d>
 80009ec:	a330      	add	r3, pc, #192	@ (adr r3, 8000ab0 <main+0x108>)
 80009ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80009f2:	f7ff fdc5 	bl	8000580 <__aeabi_dmul>
 80009f6:	4602      	mov	r2, r0
 80009f8:	460b      	mov	r3, r1
 80009fa:	4610      	mov	r0, r2
 80009fc:	4619      	mov	r1, r3
 80009fe:	f04f 0200 	mov.w	r2, #0
 8000a02:	4b30      	ldr	r3, [pc, #192]	@ (8000ac4 <main+0x11c>)
 8000a04:	f7ff fdbc 	bl	8000580 <__aeabi_dmul>
 8000a08:	4602      	mov	r2, r0
 8000a0a:	460b      	mov	r3, r1
 8000a0c:	4610      	mov	r0, r2
 8000a0e:	4619      	mov	r1, r3
 8000a10:	f04f 0200 	mov.w	r2, #0
 8000a14:	4b2c      	ldr	r3, [pc, #176]	@ (8000ac8 <main+0x120>)
 8000a16:	f7ff fedd 	bl	80007d4 <__aeabi_ddiv>
 8000a1a:	4602      	mov	r2, r0
 8000a1c:	460b      	mov	r3, r1
 8000a1e:	492b      	ldr	r1, [pc, #172]	@ (8000acc <main+0x124>)
 8000a20:	e9c1 2300 	strd	r2, r3, [r1]
		Temp_LM35_2 = ((ADC2_data*(3.3/4095)*1000)/10);    //lm35
 8000a24:	4b25      	ldr	r3, [pc, #148]	@ (8000abc <main+0x114>)
 8000a26:	681b      	ldr	r3, [r3, #0]
 8000a28:	4618      	mov	r0, r3
 8000a2a:	f7ff fd3f 	bl	80004ac <__aeabi_i2d>
 8000a2e:	a320      	add	r3, pc, #128	@ (adr r3, 8000ab0 <main+0x108>)
 8000a30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000a34:	f7ff fda4 	bl	8000580 <__aeabi_dmul>
 8000a38:	4602      	mov	r2, r0
 8000a3a:	460b      	mov	r3, r1
 8000a3c:	4610      	mov	r0, r2
 8000a3e:	4619      	mov	r1, r3
 8000a40:	f04f 0200 	mov.w	r2, #0
 8000a44:	4b1f      	ldr	r3, [pc, #124]	@ (8000ac4 <main+0x11c>)
 8000a46:	f7ff fd9b 	bl	8000580 <__aeabi_dmul>
 8000a4a:	4602      	mov	r2, r0
 8000a4c:	460b      	mov	r3, r1
 8000a4e:	4610      	mov	r0, r2
 8000a50:	4619      	mov	r1, r3
 8000a52:	f04f 0200 	mov.w	r2, #0
 8000a56:	4b1c      	ldr	r3, [pc, #112]	@ (8000ac8 <main+0x120>)
 8000a58:	f7ff febc 	bl	80007d4 <__aeabi_ddiv>
 8000a5c:	4602      	mov	r2, r0
 8000a5e:	460b      	mov	r3, r1
 8000a60:	491b      	ldr	r1, [pc, #108]	@ (8000ad0 <main+0x128>)
 8000a62:	e9c1 2300 	strd	r2, r3, [r1]
		Temp_LM35_3 = ((ADC3_data*(3.3/4095)*1000)/10);    //lm35
 8000a66:	4b16      	ldr	r3, [pc, #88]	@ (8000ac0 <main+0x118>)
 8000a68:	681b      	ldr	r3, [r3, #0]
 8000a6a:	4618      	mov	r0, r3
 8000a6c:	f7ff fd1e 	bl	80004ac <__aeabi_i2d>
 8000a70:	a30f      	add	r3, pc, #60	@ (adr r3, 8000ab0 <main+0x108>)
 8000a72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000a76:	f7ff fd83 	bl	8000580 <__aeabi_dmul>
 8000a7a:	4602      	mov	r2, r0
 8000a7c:	460b      	mov	r3, r1
 8000a7e:	4610      	mov	r0, r2
 8000a80:	4619      	mov	r1, r3
 8000a82:	f04f 0200 	mov.w	r2, #0
 8000a86:	4b0f      	ldr	r3, [pc, #60]	@ (8000ac4 <main+0x11c>)
 8000a88:	f7ff fd7a 	bl	8000580 <__aeabi_dmul>
 8000a8c:	4602      	mov	r2, r0
 8000a8e:	460b      	mov	r3, r1
 8000a90:	4610      	mov	r0, r2
 8000a92:	4619      	mov	r1, r3
 8000a94:	f04f 0200 	mov.w	r2, #0
 8000a98:	4b0b      	ldr	r3, [pc, #44]	@ (8000ac8 <main+0x120>)
 8000a9a:	f7ff fe9b 	bl	80007d4 <__aeabi_ddiv>
 8000a9e:	4602      	mov	r2, r0
 8000aa0:	460b      	mov	r3, r1
 8000aa2:	490c      	ldr	r1, [pc, #48]	@ (8000ad4 <main+0x12c>)
 8000aa4:	e9c1 2300 	strd	r2, r3, [r1]
		ADC1_data=ADC1_read();
 8000aa8:	bf00      	nop
 8000aaa:	e78b      	b.n	80009c4 <main+0x1c>
 8000aac:	f3af 8000 	nop.w
 8000ab0:	e734d9b4 	.word	0xe734d9b4
 8000ab4:	3f4a680c 	.word	0x3f4a680c
 8000ab8:	2000001c 	.word	0x2000001c
 8000abc:	20000020 	.word	0x20000020
 8000ac0:	20000024 	.word	0x20000024
 8000ac4:	408f4000 	.word	0x408f4000
 8000ac8:	40240000 	.word	0x40240000
 8000acc:	20000028 	.word	0x20000028
 8000ad0:	20000030 	.word	0x20000030
 8000ad4:	20000038 	.word	0x20000038

08000ad8 <ADC1_init>:

	}
}

void ADC1_init(void)
{
 8000ad8:	b480      	push	{r7}
 8000ada:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= (1<<0); //GPIOA ENBABLE
 8000adc:	4b1d      	ldr	r3, [pc, #116]	@ (8000b54 <ADC1_init+0x7c>)
 8000ade:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ae0:	4a1c      	ldr	r2, [pc, #112]	@ (8000b54 <ADC1_init+0x7c>)
 8000ae2:	f043 0301 	orr.w	r3, r3, #1
 8000ae6:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER |= (1<<9); // PA0
 8000ae8:	4b1b      	ldr	r3, [pc, #108]	@ (8000b58 <ADC1_init+0x80>)
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	4a1a      	ldr	r2, [pc, #104]	@ (8000b58 <ADC1_init+0x80>)
 8000aee:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000af2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1<<8); // PA0
 8000af4:	4b18      	ldr	r3, [pc, #96]	@ (8000b58 <ADC1_init+0x80>)
 8000af6:	681b      	ldr	r3, [r3, #0]
 8000af8:	4a17      	ldr	r2, [pc, #92]	@ (8000b58 <ADC1_init+0x80>)
 8000afa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000afe:	6013      	str	r3, [r2, #0]

	RCC->APB2ENR |= (1<<8); //ADC1 EN
 8000b00:	4b14      	ldr	r3, [pc, #80]	@ (8000b54 <ADC1_init+0x7c>)
 8000b02:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000b04:	4a13      	ldr	r2, [pc, #76]	@ (8000b54 <ADC1_init+0x7c>)
 8000b06:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000b0a:	6453      	str	r3, [r2, #68]	@ 0x44
	//RESOLUTION 12 BIT
	ADC1->CR1 &= ~(1<<24);
 8000b0c:	4b13      	ldr	r3, [pc, #76]	@ (8000b5c <ADC1_init+0x84>)
 8000b0e:	685b      	ldr	r3, [r3, #4]
 8000b10:	4a12      	ldr	r2, [pc, #72]	@ (8000b5c <ADC1_init+0x84>)
 8000b12:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8000b16:	6053      	str	r3, [r2, #4]
	ADC1->CR1 &= ~(1<<25);
 8000b18:	4b10      	ldr	r3, [pc, #64]	@ (8000b5c <ADC1_init+0x84>)
 8000b1a:	685b      	ldr	r3, [r3, #4]
 8000b1c:	4a0f      	ldr	r2, [pc, #60]	@ (8000b5c <ADC1_init+0x84>)
 8000b1e:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8000b22:	6053      	str	r3, [r2, #4]
	ADC1->CR2 &= ~(1<<0); // ADC DISABLE
 8000b24:	4b0d      	ldr	r3, [pc, #52]	@ (8000b5c <ADC1_init+0x84>)
 8000b26:	689b      	ldr	r3, [r3, #8]
 8000b28:	4a0c      	ldr	r2, [pc, #48]	@ (8000b5c <ADC1_init+0x84>)
 8000b2a:	f023 0301 	bic.w	r3, r3, #1
 8000b2e:	6093      	str	r3, [r2, #8]
	ADC1->SQR3 |= 4;	  //ADC 1th CAHNNEL
 8000b30:	4b0a      	ldr	r3, [pc, #40]	@ (8000b5c <ADC1_init+0x84>)
 8000b32:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000b34:	4a09      	ldr	r2, [pc, #36]	@ (8000b5c <ADC1_init+0x84>)
 8000b36:	f043 0304 	orr.w	r3, r3, #4
 8000b3a:	6353      	str	r3, [r2, #52]	@ 0x34
	ADC1->CR2 |= (1<<0);  //ADC ON
 8000b3c:	4b07      	ldr	r3, [pc, #28]	@ (8000b5c <ADC1_init+0x84>)
 8000b3e:	689b      	ldr	r3, [r3, #8]
 8000b40:	4a06      	ldr	r2, [pc, #24]	@ (8000b5c <ADC1_init+0x84>)
 8000b42:	f043 0301 	orr.w	r3, r3, #1
 8000b46:	6093      	str	r3, [r2, #8]
}
 8000b48:	bf00      	nop
 8000b4a:	46bd      	mov	sp, r7
 8000b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b50:	4770      	bx	lr
 8000b52:	bf00      	nop
 8000b54:	40023800 	.word	0x40023800
 8000b58:	40020000 	.word	0x40020000
 8000b5c:	40012000 	.word	0x40012000

08000b60 <ADC1_conversion>:

void ADC1_conversion(void)
{
 8000b60:	b480      	push	{r7}
 8000b62:	af00      	add	r7, sp, #0
	ADC1->CR2 |= (1<<30); //START CONVERSION
 8000b64:	4b05      	ldr	r3, [pc, #20]	@ (8000b7c <ADC1_conversion+0x1c>)
 8000b66:	689b      	ldr	r3, [r3, #8]
 8000b68:	4a04      	ldr	r2, [pc, #16]	@ (8000b7c <ADC1_conversion+0x1c>)
 8000b6a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000b6e:	6093      	str	r3, [r2, #8]
}
 8000b70:	bf00      	nop
 8000b72:	46bd      	mov	sp, r7
 8000b74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b78:	4770      	bx	lr
 8000b7a:	bf00      	nop
 8000b7c:	40012000 	.word	0x40012000

08000b80 <ADC1_read>:

int ADC1_read(void)
{
 8000b80:	b480      	push	{r7}
 8000b82:	af00      	add	r7, sp, #0
	ADC1->CR2 |= (1<<0);  //ADC ON
 8000b84:	4b09      	ldr	r3, [pc, #36]	@ (8000bac <ADC1_read+0x2c>)
 8000b86:	689b      	ldr	r3, [r3, #8]
 8000b88:	4a08      	ldr	r2, [pc, #32]	@ (8000bac <ADC1_read+0x2c>)
 8000b8a:	f043 0301 	orr.w	r3, r3, #1
 8000b8e:	6093      	str	r3, [r2, #8]
	while(!(ADC1->SR & (1<<1))) {} // wait for conversion to be complete
 8000b90:	bf00      	nop
 8000b92:	4b06      	ldr	r3, [pc, #24]	@ (8000bac <ADC1_read+0x2c>)
 8000b94:	681b      	ldr	r3, [r3, #0]
 8000b96:	f003 0302 	and.w	r3, r3, #2
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	d0f9      	beq.n	8000b92 <ADC1_read+0x12>
	return ADC1->DR;
 8000b9e:	4b03      	ldr	r3, [pc, #12]	@ (8000bac <ADC1_read+0x2c>)
 8000ba0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
	ADC1->CR2 &= ~(1<<0); // ADC DISABLE

}
 8000ba2:	4618      	mov	r0, r3
 8000ba4:	46bd      	mov	sp, r7
 8000ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000baa:	4770      	bx	lr
 8000bac:	40012000 	.word	0x40012000

08000bb0 <ADC2_init>:

void ADC2_init(void)
{
 8000bb0:	b480      	push	{r7}
 8000bb2:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= (1<<0); //GPIOA ENBABLE
 8000bb4:	4b1d      	ldr	r3, [pc, #116]	@ (8000c2c <ADC2_init+0x7c>)
 8000bb6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bb8:	4a1c      	ldr	r2, [pc, #112]	@ (8000c2c <ADC2_init+0x7c>)
 8000bba:	f043 0301 	orr.w	r3, r3, #1
 8000bbe:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER |= (1<<2); // PA0
 8000bc0:	4b1b      	ldr	r3, [pc, #108]	@ (8000c30 <ADC2_init+0x80>)
 8000bc2:	681b      	ldr	r3, [r3, #0]
 8000bc4:	4a1a      	ldr	r2, [pc, #104]	@ (8000c30 <ADC2_init+0x80>)
 8000bc6:	f043 0304 	orr.w	r3, r3, #4
 8000bca:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1<<3); // PA0
 8000bcc:	4b18      	ldr	r3, [pc, #96]	@ (8000c30 <ADC2_init+0x80>)
 8000bce:	681b      	ldr	r3, [r3, #0]
 8000bd0:	4a17      	ldr	r2, [pc, #92]	@ (8000c30 <ADC2_init+0x80>)
 8000bd2:	f043 0308 	orr.w	r3, r3, #8
 8000bd6:	6013      	str	r3, [r2, #0]

	RCC->APB2ENR |= (1<<9); //ADC2 EN
 8000bd8:	4b14      	ldr	r3, [pc, #80]	@ (8000c2c <ADC2_init+0x7c>)
 8000bda:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000bdc:	4a13      	ldr	r2, [pc, #76]	@ (8000c2c <ADC2_init+0x7c>)
 8000bde:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000be2:	6453      	str	r3, [r2, #68]	@ 0x44
	//RESOLUTION 12 BIT
	ADC2->CR1 &= ~(1<<24);
 8000be4:	4b13      	ldr	r3, [pc, #76]	@ (8000c34 <ADC2_init+0x84>)
 8000be6:	685b      	ldr	r3, [r3, #4]
 8000be8:	4a12      	ldr	r2, [pc, #72]	@ (8000c34 <ADC2_init+0x84>)
 8000bea:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8000bee:	6053      	str	r3, [r2, #4]
	ADC2->CR1 &= ~(1<<25);
 8000bf0:	4b10      	ldr	r3, [pc, #64]	@ (8000c34 <ADC2_init+0x84>)
 8000bf2:	685b      	ldr	r3, [r3, #4]
 8000bf4:	4a0f      	ldr	r2, [pc, #60]	@ (8000c34 <ADC2_init+0x84>)
 8000bf6:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8000bfa:	6053      	str	r3, [r2, #4]
	ADC2->CR2 &= ~(1<<0); // ADC DISABLE
 8000bfc:	4b0d      	ldr	r3, [pc, #52]	@ (8000c34 <ADC2_init+0x84>)
 8000bfe:	689b      	ldr	r3, [r3, #8]
 8000c00:	4a0c      	ldr	r2, [pc, #48]	@ (8000c34 <ADC2_init+0x84>)
 8000c02:	f023 0301 	bic.w	r3, r3, #1
 8000c06:	6093      	str	r3, [r2, #8]
	ADC2->SQR3 |= 1;	  //ADC 0th CAHNNEL
 8000c08:	4b0a      	ldr	r3, [pc, #40]	@ (8000c34 <ADC2_init+0x84>)
 8000c0a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000c0c:	4a09      	ldr	r2, [pc, #36]	@ (8000c34 <ADC2_init+0x84>)
 8000c0e:	f043 0301 	orr.w	r3, r3, #1
 8000c12:	6353      	str	r3, [r2, #52]	@ 0x34
	ADC2->CR2 |= (1<<0);  //ADC ON
 8000c14:	4b07      	ldr	r3, [pc, #28]	@ (8000c34 <ADC2_init+0x84>)
 8000c16:	689b      	ldr	r3, [r3, #8]
 8000c18:	4a06      	ldr	r2, [pc, #24]	@ (8000c34 <ADC2_init+0x84>)
 8000c1a:	f043 0301 	orr.w	r3, r3, #1
 8000c1e:	6093      	str	r3, [r2, #8]
}
 8000c20:	bf00      	nop
 8000c22:	46bd      	mov	sp, r7
 8000c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c28:	4770      	bx	lr
 8000c2a:	bf00      	nop
 8000c2c:	40023800 	.word	0x40023800
 8000c30:	40020000 	.word	0x40020000
 8000c34:	40012100 	.word	0x40012100

08000c38 <ADC2_conversion>:

void ADC2_conversion(void)
{
 8000c38:	b480      	push	{r7}
 8000c3a:	af00      	add	r7, sp, #0
	ADC2->CR2 |= (1<<30); //START CONVERSION
 8000c3c:	4b05      	ldr	r3, [pc, #20]	@ (8000c54 <ADC2_conversion+0x1c>)
 8000c3e:	689b      	ldr	r3, [r3, #8]
 8000c40:	4a04      	ldr	r2, [pc, #16]	@ (8000c54 <ADC2_conversion+0x1c>)
 8000c42:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000c46:	6093      	str	r3, [r2, #8]
}
 8000c48:	bf00      	nop
 8000c4a:	46bd      	mov	sp, r7
 8000c4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c50:	4770      	bx	lr
 8000c52:	bf00      	nop
 8000c54:	40012100 	.word	0x40012100

08000c58 <ADC2_read>:

int ADC2_read(void)
{
 8000c58:	b480      	push	{r7}
 8000c5a:	af00      	add	r7, sp, #0
	ADC2->CR2 |= (1<<0);  //ADC ON
 8000c5c:	4b09      	ldr	r3, [pc, #36]	@ (8000c84 <ADC2_read+0x2c>)
 8000c5e:	689b      	ldr	r3, [r3, #8]
 8000c60:	4a08      	ldr	r2, [pc, #32]	@ (8000c84 <ADC2_read+0x2c>)
 8000c62:	f043 0301 	orr.w	r3, r3, #1
 8000c66:	6093      	str	r3, [r2, #8]
	while(!(ADC2->SR & (1<<1))) {} // wait for conversion to be complete
 8000c68:	bf00      	nop
 8000c6a:	4b06      	ldr	r3, [pc, #24]	@ (8000c84 <ADC2_read+0x2c>)
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	f003 0302 	and.w	r3, r3, #2
 8000c72:	2b00      	cmp	r3, #0
 8000c74:	d0f9      	beq.n	8000c6a <ADC2_read+0x12>
	return ADC2->DR;
 8000c76:	4b03      	ldr	r3, [pc, #12]	@ (8000c84 <ADC2_read+0x2c>)
 8000c78:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
	ADC2->CR2 &= ~(1<<0); // ADC DISABLE

}
 8000c7a:	4618      	mov	r0, r3
 8000c7c:	46bd      	mov	sp, r7
 8000c7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c82:	4770      	bx	lr
 8000c84:	40012100 	.word	0x40012100

08000c88 <ADC3_init>:

void ADC3_init(void)
{
 8000c88:	b480      	push	{r7}
 8000c8a:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= (1<<0); //GPIOA ENBABLE
 8000c8c:	4b19      	ldr	r3, [pc, #100]	@ (8000cf4 <ADC3_init+0x6c>)
 8000c8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c90:	4a18      	ldr	r2, [pc, #96]	@ (8000cf4 <ADC3_init+0x6c>)
 8000c92:	f043 0301 	orr.w	r3, r3, #1
 8000c96:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER |= (3<<0); // PA0
 8000c98:	4b17      	ldr	r3, [pc, #92]	@ (8000cf8 <ADC3_init+0x70>)
 8000c9a:	681b      	ldr	r3, [r3, #0]
 8000c9c:	4a16      	ldr	r2, [pc, #88]	@ (8000cf8 <ADC3_init+0x70>)
 8000c9e:	f043 0303 	orr.w	r3, r3, #3
 8000ca2:	6013      	str	r3, [r2, #0]



	RCC->APB2ENR |= (1<<10); //ADC3 EN
 8000ca4:	4b13      	ldr	r3, [pc, #76]	@ (8000cf4 <ADC3_init+0x6c>)
 8000ca6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000ca8:	4a12      	ldr	r2, [pc, #72]	@ (8000cf4 <ADC3_init+0x6c>)
 8000caa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000cae:	6453      	str	r3, [r2, #68]	@ 0x44
	//RESOLUTION 12 BIT
	ADC3->CR1 &= ~(1<<24);
 8000cb0:	4b12      	ldr	r3, [pc, #72]	@ (8000cfc <ADC3_init+0x74>)
 8000cb2:	685b      	ldr	r3, [r3, #4]
 8000cb4:	4a11      	ldr	r2, [pc, #68]	@ (8000cfc <ADC3_init+0x74>)
 8000cb6:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8000cba:	6053      	str	r3, [r2, #4]
	ADC3->CR1 &= ~(1<<25);
 8000cbc:	4b0f      	ldr	r3, [pc, #60]	@ (8000cfc <ADC3_init+0x74>)
 8000cbe:	685b      	ldr	r3, [r3, #4]
 8000cc0:	4a0e      	ldr	r2, [pc, #56]	@ (8000cfc <ADC3_init+0x74>)
 8000cc2:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8000cc6:	6053      	str	r3, [r2, #4]
	ADC3->CR2 &= ~(1<<0); // ADC DISABLE
 8000cc8:	4b0c      	ldr	r3, [pc, #48]	@ (8000cfc <ADC3_init+0x74>)
 8000cca:	689b      	ldr	r3, [r3, #8]
 8000ccc:	4a0b      	ldr	r2, [pc, #44]	@ (8000cfc <ADC3_init+0x74>)
 8000cce:	f023 0301 	bic.w	r3, r3, #1
 8000cd2:	6093      	str	r3, [r2, #8]
	ADC3->SQR3 |= 0;	  //ADC 0th CAHNNEL
 8000cd4:	4b09      	ldr	r3, [pc, #36]	@ (8000cfc <ADC3_init+0x74>)
 8000cd6:	4a09      	ldr	r2, [pc, #36]	@ (8000cfc <ADC3_init+0x74>)
 8000cd8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000cda:	6353      	str	r3, [r2, #52]	@ 0x34
	ADC3->CR2 |= (1<<0);  //ADC ON
 8000cdc:	4b07      	ldr	r3, [pc, #28]	@ (8000cfc <ADC3_init+0x74>)
 8000cde:	689b      	ldr	r3, [r3, #8]
 8000ce0:	4a06      	ldr	r2, [pc, #24]	@ (8000cfc <ADC3_init+0x74>)
 8000ce2:	f043 0301 	orr.w	r3, r3, #1
 8000ce6:	6093      	str	r3, [r2, #8]
}
 8000ce8:	bf00      	nop
 8000cea:	46bd      	mov	sp, r7
 8000cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cf0:	4770      	bx	lr
 8000cf2:	bf00      	nop
 8000cf4:	40023800 	.word	0x40023800
 8000cf8:	40020000 	.word	0x40020000
 8000cfc:	40012200 	.word	0x40012200

08000d00 <ADC3_conversion>:

void ADC3_conversion(void)
{
 8000d00:	b480      	push	{r7}
 8000d02:	af00      	add	r7, sp, #0
	ADC3->CR2 |= (1<<30); //START CONVERSION
 8000d04:	4b05      	ldr	r3, [pc, #20]	@ (8000d1c <ADC3_conversion+0x1c>)
 8000d06:	689b      	ldr	r3, [r3, #8]
 8000d08:	4a04      	ldr	r2, [pc, #16]	@ (8000d1c <ADC3_conversion+0x1c>)
 8000d0a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000d0e:	6093      	str	r3, [r2, #8]
}
 8000d10:	bf00      	nop
 8000d12:	46bd      	mov	sp, r7
 8000d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d18:	4770      	bx	lr
 8000d1a:	bf00      	nop
 8000d1c:	40012200 	.word	0x40012200

08000d20 <ADC3_read>:

int ADC3_read(void)
{
 8000d20:	b480      	push	{r7}
 8000d22:	af00      	add	r7, sp, #0
	ADC3->CR2 |= (1<<0);  //ADC ON
 8000d24:	4b09      	ldr	r3, [pc, #36]	@ (8000d4c <ADC3_read+0x2c>)
 8000d26:	689b      	ldr	r3, [r3, #8]
 8000d28:	4a08      	ldr	r2, [pc, #32]	@ (8000d4c <ADC3_read+0x2c>)
 8000d2a:	f043 0301 	orr.w	r3, r3, #1
 8000d2e:	6093      	str	r3, [r2, #8]
	while(!(ADC3->SR & (1<<1))) {} // wait for conversion to be complete
 8000d30:	bf00      	nop
 8000d32:	4b06      	ldr	r3, [pc, #24]	@ (8000d4c <ADC3_read+0x2c>)
 8000d34:	681b      	ldr	r3, [r3, #0]
 8000d36:	f003 0302 	and.w	r3, r3, #2
 8000d3a:	2b00      	cmp	r3, #0
 8000d3c:	d0f9      	beq.n	8000d32 <ADC3_read+0x12>
	return ADC3->DR;
 8000d3e:	4b03      	ldr	r3, [pc, #12]	@ (8000d4c <ADC3_read+0x2c>)
 8000d40:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
	ADC3->CR2 &= ~(1<<0); // ADC DISABLE

}
 8000d42:	4618      	mov	r0, r3
 8000d44:	46bd      	mov	sp, r7
 8000d46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d4a:	4770      	bx	lr
 8000d4c:	40012200 	.word	0x40012200

08000d50 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000d50:	480d      	ldr	r0, [pc, #52]	@ (8000d88 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000d52:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000d54:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000d58:	480c      	ldr	r0, [pc, #48]	@ (8000d8c <LoopForever+0x6>)
  ldr r1, =_edata
 8000d5a:	490d      	ldr	r1, [pc, #52]	@ (8000d90 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000d5c:	4a0d      	ldr	r2, [pc, #52]	@ (8000d94 <LoopForever+0xe>)
  movs r3, #0
 8000d5e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000d60:	e002      	b.n	8000d68 <LoopCopyDataInit>

08000d62 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000d62:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000d64:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000d66:	3304      	adds	r3, #4

08000d68 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000d68:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000d6a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000d6c:	d3f9      	bcc.n	8000d62 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000d6e:	4a0a      	ldr	r2, [pc, #40]	@ (8000d98 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000d70:	4c0a      	ldr	r4, [pc, #40]	@ (8000d9c <LoopForever+0x16>)
  movs r3, #0
 8000d72:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000d74:	e001      	b.n	8000d7a <LoopFillZerobss>

08000d76 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000d76:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000d78:	3204      	adds	r2, #4

08000d7a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000d7a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000d7c:	d3fb      	bcc.n	8000d76 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000d7e:	f000 f811 	bl	8000da4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000d82:	f7ff fe11 	bl	80009a8 <main>

08000d86 <LoopForever>:

LoopForever:
  b LoopForever
 8000d86:	e7fe      	b.n	8000d86 <LoopForever>
  ldr   r0, =_estack
 8000d88:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000d8c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000d90:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000d94:	08000e0c 	.word	0x08000e0c
  ldr r2, =_sbss
 8000d98:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000d9c:	20000040 	.word	0x20000040

08000da0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000da0:	e7fe      	b.n	8000da0 <ADC_IRQHandler>
	...

08000da4 <__libc_init_array>:
 8000da4:	b570      	push	{r4, r5, r6, lr}
 8000da6:	4d0d      	ldr	r5, [pc, #52]	@ (8000ddc <__libc_init_array+0x38>)
 8000da8:	4c0d      	ldr	r4, [pc, #52]	@ (8000de0 <__libc_init_array+0x3c>)
 8000daa:	1b64      	subs	r4, r4, r5
 8000dac:	10a4      	asrs	r4, r4, #2
 8000dae:	2600      	movs	r6, #0
 8000db0:	42a6      	cmp	r6, r4
 8000db2:	d109      	bne.n	8000dc8 <__libc_init_array+0x24>
 8000db4:	4d0b      	ldr	r5, [pc, #44]	@ (8000de4 <__libc_init_array+0x40>)
 8000db6:	4c0c      	ldr	r4, [pc, #48]	@ (8000de8 <__libc_init_array+0x44>)
 8000db8:	f000 f818 	bl	8000dec <_init>
 8000dbc:	1b64      	subs	r4, r4, r5
 8000dbe:	10a4      	asrs	r4, r4, #2
 8000dc0:	2600      	movs	r6, #0
 8000dc2:	42a6      	cmp	r6, r4
 8000dc4:	d105      	bne.n	8000dd2 <__libc_init_array+0x2e>
 8000dc6:	bd70      	pop	{r4, r5, r6, pc}
 8000dc8:	f855 3b04 	ldr.w	r3, [r5], #4
 8000dcc:	4798      	blx	r3
 8000dce:	3601      	adds	r6, #1
 8000dd0:	e7ee      	b.n	8000db0 <__libc_init_array+0xc>
 8000dd2:	f855 3b04 	ldr.w	r3, [r5], #4
 8000dd6:	4798      	blx	r3
 8000dd8:	3601      	adds	r6, #1
 8000dda:	e7f2      	b.n	8000dc2 <__libc_init_array+0x1e>
 8000ddc:	08000e04 	.word	0x08000e04
 8000de0:	08000e04 	.word	0x08000e04
 8000de4:	08000e04 	.word	0x08000e04
 8000de8:	08000e08 	.word	0x08000e08

08000dec <_init>:
 8000dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dee:	bf00      	nop
 8000df0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000df2:	bc08      	pop	{r3}
 8000df4:	469e      	mov	lr, r3
 8000df6:	4770      	bx	lr

08000df8 <_fini>:
 8000df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dfa:	bf00      	nop
 8000dfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dfe:	bc08      	pop	{r3}
 8000e00:	469e      	mov	lr, r3
 8000e02:	4770      	bx	lr
